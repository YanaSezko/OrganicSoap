{"version":3,"sources":["hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","images/banner.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","photos","small","Preloader","Post","className","s","item","message","MyPosts","memo","postsElement","posts","map","p","id","likesCount","createRef","postBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","vid","width","height","frameborder","allow","allowfullscreen","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.040e7811.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n  }); \r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return<Redirect to = '/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n         \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"ProfileInfo_banner__3at1r\"};","module.exports = __webpack_public_path__ + \"static/media/banner.e88b8547.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__6EsxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1hZW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"vid\":\"Profile_vid__65k1l\"};","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect( () => {\r\n setStatus(props.status);\r\n}, [props.status]);\r\n\r\nconst activateEditMode=()=>{\r\n    setEditMode(true);\r\n}\r\n\r\nconst deactivateEditMode=()=>{\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\nconst onStatusChange=(e)=>{\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n             <div>\r\n                    <span onDoubleClick={activateEditMode}>{ props.status || \"----\" }</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                    value = {status} />\r\n                </div>\r\n            }\r\n        </div>\r\n        )       \r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport banner from './../../../images/banner.jpg';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n    <div>\r\n       {/*  <div className={s.banner}>\r\n            <img width='100%' src={banner} alt={\"banner\"}/>\r\n        </div>\r\n        <h1>100% Natural Soap</h1> */}\r\n        \r\n        <div>\r\n            <img src={profile.photos.small}/>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post =(props)=>{\r\n\r\n    return <li className={s.item}><a>{props.message}</a></li>\r\n }\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\nimport ProfileStatusWithHooks from '../ProfileInfo/ProfileStatusWithHooks';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = [...props.posts].map(p => <Post message={p.message} id={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let newPostEl = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n   \r\n\r\n    return <section className={s.postBlock}>\r\n        <div>Добавить новый пост</div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\r\n        <ul className={s.posts}>\r\n            {postsElement}\r\n        </ul>\r\n    </section>\r\n});\r\n\r\nconst maxLength10=maxLengthCreator(10);\r\n\r\nconst AddNewPostForm=(props)=>{\r\n    return(\r\n        <>\r\n        <form onSubmit={props.handleSubmit} className={s.addPost}>\r\n            <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder={\"Post message\"}></Field>\r\n            <button>Add new post</button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n    form:\"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n       }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div>\r\n        <iframe  className={s.vid} width=\"727\" height=\"409\" src=\"https://www.youtube.com/embed/HJeJ_1ASQYI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n        <ProfileInfo  profile={props.profile}  status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile,updateStatus,getStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect\"\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n        if (!userId){\r\n           userId =  this.props.authorizedUserId;\r\n           if (!userId){\r\n               this.props.history.push(\"/login \");\r\n           }\r\n        }\r\n        \r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            < Profile {...this.props} \r\n            profile={this.props.profile}\r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n   \r\n  });\r\n\r\nexport default  compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}