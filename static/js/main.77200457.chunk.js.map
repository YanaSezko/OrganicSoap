{"version":3,"sources":["redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","api/api.js","images/preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/auth-reducer.js","redux/app-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormControls/FormsControls.js","components/common/FormControls/FormsControls.module.css","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","fake","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","data","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","nav_list","item","to","activeClassName","active","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","Header","props","header","loginBlock","onClick","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formError","length","stopSubmit","_error","formData","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SoapJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormsControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","src","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost"],"mappings":"mJAGIA,EAAe,CACfC,SAAU,CACN,CAACC,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,gBACjB,CAACD,GAAI,EAAGC,QAAS,OAErBC,QAAS,CACL,CAACF,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,WAmBTC,EAAqB,SAACC,GAAD,MAAqB,CAACC,KAhCnC,eAgCuDD,mBAE7DE,IAjBQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAnBa,eAoBT,IAAII,EAAOD,EAAOJ,eACnB,OAAO,2BACCG,GADR,IAEKT,SAAS,GAAD,mBAAMS,EAAMT,UAAZ,CAAsB,CAACC,GAAI,EAAGC,QAASS,OAGvD,QACI,OAAOF,K,8PC5BNG,EAAoB,SAACC,EAAMC,EAAQC,EAAaC,GAE7D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCSPnB,EAAe,CACfoB,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,GACrBC,KAAM,IA2CGC,EAAgB,SAACC,GAAD,MAAa,CACtCpB,KA5DW,SA6DXoB,WAESC,EAAkB,SAACD,GAAD,MAAa,CACxCpB,KA/Da,WAgEboB,WAMSE,EAAiB,SAACP,GAAD,MAAkB,CAC5Cf,KArEqB,mBAsErBe,gBAMSQ,EAAmB,SAACP,GAAD,MAAiB,CAC7ChB,KA3EuB,qBA4EvBgB,eAESQ,EAA0B,SAACR,EAAYI,GAAb,MAAyB,CAC5DpB,KA9EiC,+BA+EjCgB,aACAI,WAGSK,EAAe,SAACC,EAAMb,GAC/B,8CAAO,WAAOc,GAAP,eAAAC,EAAA,6DACHD,EAASJ,GAAiB,IAC1BI,EAASL,EAAeI,IAFrB,SAIcG,IAASC,SAASJ,EAAMb,GAJtC,OAICkB,EAJD,OAKHJ,EAASJ,GAAiB,IAC1BI,EA7B4B,CAChC3B,KAlEc,YAmEdY,MA2BsBmB,EAAKzB,QACvBqB,EAtBgD,CACpD3B,KAxE0B,wBAyE1BgC,MAoBgCD,EAAKE,aAP9B,2CAAP,uDAWEC,EAAkB,uCAAG,WAAOP,EAAUP,EAAQe,EAAWC,GAApC,SAAAR,EAAA,6DACvBD,EAASH,GAAwB,EAAMJ,IADhB,SAEFe,EAAUf,GAFR,OAGS,GAHT,OAGVW,KAAKM,YACdV,EAASS,EAAchB,IAE3BO,EAASH,GAAwB,EAAOJ,IANjB,2CAAH,4DASXkB,EAAS,SAAClB,GACnB,8CAAO,WAAOO,GAAP,SAAAC,EAAA,sDACHM,EAAmBP,EAAUP,EAAQS,IAASS,OAAOC,KAAKV,KAAWV,GADlE,2CAAP,uDAISqB,EAAW,SAACpB,GACrB,8CAAO,WAAOO,GAAP,SAAAC,EAAA,sDACHM,EAAmBP,EAAUP,EAAQS,IAASW,SAASD,KAAKV,KAAWR,GADpE,2CAAP,uDAMWoB,IAvGM,WAAmC,IAAlCvC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,IArBO,SAsBH,OAAO,2BACAE,GADP,IAEIU,MAAMP,EAAoBH,EAAMU,MAAOT,EAAOiB,OAAQ,KAAM,CAACsB,UAAU,MAE3E,IAzBK,WA0BD,OAAO,2BACAxC,GADP,IAEIU,MAAMP,EAAoBH,EAAMU,MAAOT,EAAOiB,OAAQ,KAAM,CAACsB,UAAU,MAE3E,IA7BE,YA8BE,OAAO,2BACAxC,GADP,IAEIU,MAAOT,EAAOS,QAGtB,IAlCS,mBAmCL,OAAO,2BAAIV,GAAX,IAAkBa,YAAaZ,EAAOY,cAE1C,IApCc,wBAqCV,OAAO,2BAAIb,GAAX,IAAkBY,gBAAiBX,EAAO6B,QAE9C,IAtCW,qBAuCP,OAAO,2BAAI9B,GAAX,IAAkBc,WAAYb,EAAOa,aAEzC,IAxCqB,+BAyCjB,OAAO,2BACAd,GADP,IAEIe,oBAAqBd,EAAOa,WAAP,sBACfd,EAAMe,qBADS,CACYd,EAAOiB,SACtClB,EAAMe,oBAAoB0B,QAAO,SAAAjD,GAAE,OAAIA,GAAMS,EAAOiB,YAG9D,QACI,OAAOlB,K,gCC7D3B,mHAEM0C,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAKNnB,EAAW,CACpBC,SADoB,WACsB,IAAjCf,EAAgC,uDAAlB,EAAGF,EAAe,uDAAJ,GACjC,OAAO+B,EAASK,IAAT,qBAAwElC,EAAxE,kBAA6FF,IAC/FqC,MAAK,SAAAC,GACF,OAAOA,EAASpB,SAG5BO,OAPoB,SAOblB,GAEH,OAAOwB,EAASQ,KAAT,iBAAqEhC,KAEhFoB,SAXoB,SAWXpB,GACL,OAAOwB,EAASS,OAAT,iBAAuEjC,KAElFkC,WAdoB,SAcTlC,GAEP,OADAmC,QAAQC,KAAK,8CACNC,EAAWH,WAAWlC,KAKxBqC,EAAa,CACtBH,WADsB,SACXlC,GACP,OAAOwB,EAASK,IAAkD,WAAa7B,IAEnFsC,UAJsB,SAIZtC,GACN,OAAOwB,EAASK,IAAkD,kBAAoB7B,IAE1FuC,aAPsB,SAOTC,GACT,OAAOhB,EAASiB,IAAT,iBAA4E,CAACD,OAAOA,MAKtFE,EAAU,CACnBC,GADmB,WAEvB,OAAQnB,EAASK,IAAT,YAEJe,MAJmB,SAIbC,EAAMC,GAA2B,IAAlBC,EAAiB,wDAC1C,OAASvB,EAASQ,KAAT,aAAwE,CAACa,QAAMC,WAASC,gBAE7FC,OAPmB,WAQf,OAASxB,EAASS,OAAT,iB,oBCrDjBgB,EAAOC,QAAU,IAA0B,uC,+ECC3CD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,kECW7DC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uFCDSC,EAbA,WACX,OACI,yBAAKC,UAAWC,IAAEC,KACd,wBAAIF,UAAWC,IAAEE,UACb,wBAAIH,UAAWC,IAAEG,MAAM,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEM,QAA1C,+CACvB,wBAAIP,UAAWC,IAAEG,MAAM,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAEM,QAAxC,8BACvB,wBAAIP,UAAWC,IAAEG,MAAM,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBL,IAAEM,QAA3C,qDACvB,wBAAIP,UAAWC,IAAEG,MAAM,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAEM,QAA1C,uBACvB,wBAAIP,UAAWC,IAAEG,MAAM,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAEM,QAAxC,gF,+CCTjCC,EAAgB,kCAElB7F,EAAe,CACf4B,OAAQ,KACR6C,MAAO,KACPD,MAAO,KACPsB,QAAQ,GAiBCC,EAAkB,SAACnE,EAAQ6C,EAAOD,EAAOsB,GAAvB,MAAmC,CAACtF,KAAMqF,EAAeG,QAAS,CAACpE,SAAQ6C,QAAOD,QAAMsB,YAC1GG,EAAkB,yDAAK,WAAM9D,GAAN,uBAAAC,EAAA,sEACfkC,IAAQC,KADO,OAEC,KADjCZ,EADgC,QAEnBpB,KAAKM,aAAmB,EACJc,EAASpB,KAAKA,KAAlCrC,EADuB,EACvBA,GAAIsE,EADmB,EACnBA,MAAOC,EADY,EACZA,MAChBtC,EAAS4D,EAAgB7F,EAAIuE,EAAOD,GAAM,KAJlB,2CAAL,uDA0BhB0B,EAxCK,WAAmC,IAAlCxF,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAKqF,EACA,OAAO,2BACDnF,GACAC,EAAOqF,SAGlB,QACI,OAAOtF,IClBfV,EAAe,CACfmG,aAAa,GAgCFC,EA5BI,WAAmC,IAAlC1F,EAAiC,uDAAzBV,EAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,IAToB,sBAUf,OAAO,2BACDE,GADN,IAEGyF,aAAa,IAGrB,QACI,OAAOzF,I,yBCJJ2F,EATD,SAACC,GACX,OAAO,4BAAQjB,UAAWC,IAAEiB,QACxB,kDACA,yBAAKlB,UAAWC,IAAEkB,YACbF,EAAMR,OAAS,6BAAMQ,EAAM9B,MAAZ,KAAoB,4BAAQiC,QAASH,EAAM1B,QAAvB,YAAuD,kBAAC,IAAD,CAASc,GAAI,UAAb,Y,QCFjGgB,E,uKAEE,OAAO,kBAAC,EAAWC,KAAKL,W,GAFFM,IAAMC,WAUrBC,eAJS,SAACpG,GAAD,MAAY,CAChCoF,OAAQpF,EAAMqG,KAAKjB,OACnBtB,MAAO9D,EAAMqG,KAAKvC,SAEkB,CAACI,OH4BnB,yDAAI,WAAMzC,GAAN,SAAAC,EAAA,sEACDkC,IAAQM,SADP,OAEe,IAFf,OAELrC,KAAKM,YACdV,EAAS4D,EAAgB,KAAM,KAAM,MAAK,IAH5B,2CAAJ,wDG5BPe,CAAmCJ,G,0CCM5CM,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAdL,SAAC,GAAyB,IAAxBE,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,MAC9B,OACI,0BAAOC,SAAUF,GAChBG,YAAY,QAAQ,QAAQ,CAACC,KAAWC,KACxCF,YAAY,WAAW,WAAW,CAACC,KAAWC,IAAM,CAAChH,KAAK,aAC1D8G,YAAY,KAAK,aAAa,GAAIE,IAAM,CAAChH,KAAK,YAAa,eAC3D4G,GAAS,yBAAK/B,UAAWC,IAAEmC,WAAYL,GACnC,6BACG,8CAyBGN,eAHG,SAACpG,GAAD,MAAU,CAC5BoF,OAAQpF,EAAMqG,KAAKjB,UAEqB,CAACtB,MJPxB,SAACC,EAAMC,EAASC,GAAhB,8CAA8B,WAAMxC,GAAN,iBAAAC,EAAA,sEAC9BkC,IAAQE,MAAMC,EAAMC,EAASC,GADC,OAEV,KADrChB,EAD+C,QAE9BpB,KAAKM,WACdV,EAAS8D,MAEP9F,EAAUwD,EAASpB,KAAKtC,SAASyH,OAAS,EAAI/D,EAASpB,KAAKtC,SAAS,GAAG,aAClFkC,EAASwF,YAAW,QAAS,CAACC,OAAQzH,MANS,2CAA9B,wDIOF2G,EAjBL,SAACR,GAKf,OAAIA,EAAMR,OACC,kBAAC,IAAD,CAAUJ,GAAI,aAEd,6BACH,qCACA,kBAACsB,EAAD,CAAgBK,SATP,SAACQ,GACdvB,EAAM9B,MAAMqD,EAASpD,MAAOoD,EAASnD,SAAUmD,EAASlD,mB,2DCXxDmD,EAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAazH,IACb0H,UAAWlF,IACX8D,KAAMb,EACNgB,KAAMkB,IACNC,IAAKjC,IAGHkC,EAAmBtD,OAAOuD,sCAAwCC,IAClEC,EAAQC,YAAYZ,EAAUQ,EAChCK,YAAgBC,OAGpB5D,OAAO6D,UAAYJ,EAEJA,QC7BFK,EAAe,SAACjC,GACzB,OAAO,SAACP,GACJ,OAAQ,kBAAC,IAAMyC,SAAP,CAAgBC,SAAU,kBAACC,EAAA,EAAD,OACtB,kBAACpC,EAAcP,MCY7B4C,GAAmBtC,IAAMuC,MAAK,kBAAM,iCACpCC,GAAmBxC,IAAMuC,MAAK,kBAAM,iCACpCE,GAAiBzC,IAAMuC,MAAK,kBAAM,iCAGlCG,G,kLAEE3C,KAAKL,MAAMiD,kB,+BAIf,OAAK5C,KAAKL,MAAMH,YAKZ,yBAAKd,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAOmE,KAAK,WACRC,OAAQX,EAAaI,MACzB,kBAAC,IAAD,CAAOM,KAAK,oBACPC,OAAQX,EAAaM,MAC1B,kBAAC,IAAD,CAAOI,KAAK,SACPC,OAAQX,EAAaO,MAC1B,kBAAC,IAAD,CAAOG,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,WAdxC,kBAACR,EAAA,EAAD,U,GAPOpC,aAgCd6C,GAAelB,YACfmB,IACA7C,aANoB,SAACpG,GAAD,MAAY,CAChCyF,YAAYzF,EAAM2H,IAAIlC,eAKG,CAACoD,cNjCD,kBAAI,SAACpH,GACjC,IAAIyH,EAAUzH,EAAS8D,KAGvB4D,QAAQC,IAAI,CAACF,IACZlG,MAAK,WACHvB,EARqC,CAAC3B,KApBd,+BMqDTgI,CAE4Bc,IAUhCS,GARI,SAACzD,GAChB,OAAO,kBAAC,IAAD,KACP,kBAAC,IAAD,CAAUmC,MAAOA,GACb,kBAACiB,GAAD,SCtDRM,IAASP,OACL,kBAAC,GAAD,MAAcQ,SAASC,eAAe,SVwHpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3G,MAAK,SAAA4G,GACjCA,EAAaC,iB,2LW/HbC,EAAa,SAAC,GAAwC,EAAvCC,MAAwC,IAAD,IAAjCC,KAAMC,EAA2B,EAA3BA,QAAQvD,EAAmB,EAAnBA,MAAOwD,EAAY,EAAZA,SACtCC,EAASF,GAAWvD,EAC1B,OACI,yBAAK/B,UAAWC,IAAEwF,YAAa,KAAMD,EAAWvF,IAAE8B,MAAQ,KACtD,6BACKwD,GAEJC,GAAY,8BAAOzD,KAInB2D,EAAW,SAACzE,GAAS,IACvBmE,EAAkCnE,EAAlCmE,MAAqBO,GAAa1E,EAA5BoE,KAA4BpE,EAAvB2E,MADW,YACY3E,EADZ,2BAE7B,OAAM,kBAACkE,EAAgBlE,EAAO,8CAAcmE,EAAUO,MAE7CxD,EAAQ,SAAClB,GAAS,IACpBmE,EAAkCnE,EAAlCmE,MAAqBO,GAAa1E,EAA5BoE,KAA4BpE,EAAvB2E,MADQ,YACe3E,EADf,2BAE1B,OAAM,kBAACkE,EAAgBlE,EAAO,2CAAWmE,EAAUO,MAG1C1D,EAAY,SAAC4D,EAAY7K,EAAM8K,EAAYC,GAA/B,IAA0C9E,EAA1C,uDAAgD,GAAI+E,EAApD,uDAAyD,GAAzD,OACzB,6BACI,kBAAC,IAAD,eAAOH,YAAaA,EAChB7K,KAAMA,EACNiL,SAAUH,EACVC,UAAWA,GACP9E,IAAS+E,K,mBC7BrBxG,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,UAAY,mC,gCCDpH,sCAOemE,IAJC,SAAC3C,GACb,OAAO,yBAAKiF,IAAKC,Q,gCCJrB,oEAAO,IAAMjE,EAAW,SAAAkE,GACpB,IAAIA,EAEJ,MAAO,qBAEEC,EAAkB,SAACC,GAAD,OAAe,SAACF,GAC3C,GAAIA,EAAM/D,OAAOiE,EAAU,MAAM,cAAN,OAAqBA,EAArB,e,mBCL/B9G,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,2NCS3D9E,EAAe,CACf4L,MAAO,CAAC,CACA1L,GAAI,EACJC,QAAS,sGACT0L,WAAY,IAEhB,CACI3L,GAAI,EACJC,QAAS,sGACT0L,WAAY,KAGpBC,QAAS,KACT1H,OAAQ,IAmCC2H,EAAuB,SAACC,GAAD,MAAkB,CAClDxL,KArDa,WAsDbwL,gBAMSC,EAAY,SAAC7H,GAAD,MAAa,CAClC5D,KA3De,aA4Df4D,WAGS8H,EAAiB,SAACtK,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,sEACjBC,IAASyB,WAAWlC,GADH,OAClC+B,EADkC,OAEtCxB,EAXwC,CACxC3B,KAxDqB,mBAyDrBsL,QASwBnI,EAASpB,OAFK,2CAAZ,uDAKjB2B,EAAY,SAACtC,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,sEACZ6B,IAAWC,UAAUtC,GADT,OAC7B+B,EAD6B,OAEjCxB,EAAS8J,EAAUtI,EAASpB,OAFK,2CAAZ,uDAKZ4B,EAAe,SAACC,GAAD,8CAAY,WAAOjC,GAAP,SAAAC,EAAA,sEACf6B,IAAWE,aAAaC,GADT,OAEH,IAFG,OAEvB7B,KAAKM,YACdV,EAAS8J,EAAU7H,IAHa,2CAAZ,uDAUb6D,IAjEQ,WAAmC,IAAlCvH,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAAK,WACD,IAAI2L,EAAU,CACVjM,GAAI,EACJC,QAASQ,EAAOqL,YAChBH,WAAY,GAEhB,OAAO,2BACAnL,GADP,IAEIkL,MAAM,GAAD,mBAAMlL,EAAMkL,OAAZ,CAAmBO,IACxBH,YAAa,KAGrB,IAAK,aACD,OAAO,2BACAtL,GADP,IAEI0D,OAAQzD,EAAOyD,SAIvB,IAAK,mBACD,OAAO,2BACA1D,GADP,IAEIoL,QAASnL,EAAOmL,UAGxB,QACI,OAAOpL,K","file":"static/js/main.77200457.chunk.js","sourcesContent":["/* const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'; */\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Yana'},\r\n        {id: 2, name: 'Olya'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Vasya'},\r\n        {id: 5, name: 'Sasha'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n           return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray=(items,itemId, objPropName, newObjProps)=>{\r\n\r\nreturn items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})\r\n}\r\n","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\nimport actions from \"redux-form/lib/actions\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n            case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    users:updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                }\r\n                case SET_USERS: {\r\n                    return {\r\n                        ...state,\r\n                        users: action.users\r\n                    }\r\n                }\r\n                case SET_CURRENT_PAGE: {\r\n                    return {...state, currentPage: action.currentPage}\r\n                }\r\n                case SET_TOTAL_USERS_COUNT: {\r\n                    return {...state, totalUsersCount: action.count }\r\n                }\r\n                case TOGGLE_IS_FETCHING: {\r\n                    return {...state, isFetching: action.isFetching }\r\n                }\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n                    return {\r\n                        ...state,\r\n                        followingInProgress: action.isFetching \r\n                        ? [...state.followingInProgress, action.userId] \r\n                        : state.followingInProgress.filter(id => id != action.userId)\r\n                    }\r\n                }\r\n                default:\r\n                    return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n})\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n})\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n        \r\n    }\r\n}\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"3c81fd9e-287b-43e8-9969-1552db318957\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(/*'https://cors-anywhere.herokuapp.com/' + */`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n\r\n        return instance.post(/*'https://cors-anywhere.herokuapp.com/' + */`follow/${userId}` )\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(/*'https://cors-anywhere.herokuapp.com/' + */`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(/*'https://cors-anywhere.herokuapp.com/' + */ `profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(/*'https://cors-anywhere.herokuapp.com/' + */ `profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(/*'https://cors-anywhere.herokuapp.com/' + */ `profile/status`,{status:status});\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\nreturn  instance.get(/*'https://cors-anywhere.herokuapp.com/' + */`auth/me`);\r\n    },\r\n    login(email,password,rememberMe=false){\r\nreturn   instance.post(/*'https://cors-anywhere.herokuapp.com/' + */`auth/login`,{email,password,rememberMe});      \r\n    },\r\n    logout(){\r\n        return   instance.delete(/*'https://cors-anywhere.herokuapp.com/' + */`auth/login`);     \r\n            }\r\n}","module.exports = __webpack_public_path__ + \"static/media/preloader.208ba494.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2BDtF\",\"item\":\"Navbar_item__4ZwcX\",\"active\":\"Navbar_active__2ZSPY\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul className={s.nav_list}>\r\n                <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Главная</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/about\" activeClassName={s.active}>О Нас</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/contacts\" activeClassName={s.active}>Контакты</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Чат</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Пользователи</NavLink></li>\r\n            </ul>\r\n        </nav>)\r\n}\r\n\r\nexport default Navbar;","import {authAPI} from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'organic-soap/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n             return {\r\n                ...state,\r\n                ...action.payload\r\n             }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login,isAuth}});\r\nexport const getAuthUserData = ()=> async(dispatch)=>{\r\nlet response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login,true));\r\n        }\r\n}\r\n\r\nexport const login = (email,password,rememberMe)=> async(dispatch)=>{\r\nlet response = await authAPI.login(email,password,rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n          let message = response.data.messages.length > 0 ? response.data.messages[0]:\"Some error\"; \r\n    dispatch(stopSubmit(\"login\", {_error: message}));\r\n         }\r\n}\r\n\r\nexport const logout = ()=>async(dispatch)=>{\r\n    let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null,false));\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n             return {\r\n                ...state,\r\n                initialized: true\r\n             }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = ()=>(dispatch)=>{\r\n let promise = dispatch(getAuthUserData());\r\n//dispatch(somethingelse());\r\n//dispatch(somethingelse());\r\n Promise.all([promise])\r\n .then(()=>{\r\n    dispatch(initializedSuccess());\r\n  });\r\n \r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header =(props)=>{\r\n    return <header className={s.header}>\r\n        <h2>Organic Soap by YS</h2>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div>{props.login} -<button onClick={props.logout}>Log out</button></div>: <NavLink to={'/login'}>login</NavLink> }\r\n        </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from \"./../common/FormControls/FormsControls.module.css\" \r\n\r\nconst LoginForm = ({handleSubmit, error})=>{\r\n    return (\r\n        <form  onSubmit={handleSubmit}>\r\n        {createField(\"Email\",\"email\",[required], Input)}\r\n        {createField(\"Password\",\"password\",[required], Input,{type:\"password\"})}      \r\n        {createField(null,\"rememberMe\",[], Input,{type:\"checkbox\"}, \"remember me\")}     \r\n        {error && <div className={s.formError}>{error}</div>}\r\n             <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props)=>{\r\nconst onSubmit = (formData)=>{\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n}\r\n \r\nif (props.isAuth){\r\n    return <Redirect to={\"/profile\"}/>\r\n}\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n    export default connect(mapStateToProps, {login})(Login);\r\n\r\n\r\n\r\n\r\n   ","import {\r\n    applyMiddleware,\r\n    combineReducers,\r\n    createStore,\r\n    compose\r\n} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {\r\n    reducer as formReducer\r\n} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) =>{\r\n    return (props) => {\r\n        return  <React.Suspense fallback={<Preloader/>}>\r\n                    <Component {...props} />\r\n                </React.Suspense> \r\n                };\r\n            }","import React, { Component, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store'; \r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n//import UsersContainer from \"./components/Users/UsersContainer\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\nrender() {\r\n    if (!this.props.initialized){\r\n    return <Preloader/>  \r\n    }\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path='/dialogs'\r\n                    render={withSuspense(DialogsContainer)}/>\r\n                <Route path='/profile/:userId?'\r\n                     render={withSuspense(ProfileContainer)}/>\r\n                <Route path='/users' \r\n                     render={withSuspense(UsersContainer)}/>\r\n                <Route path='/login' render={() => <Login/>}/>    \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized:state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst  SoapJSApp = (props) => {\r\n    return <HashRouter /* basename = {process.env.PUBLIC_URL} */>\r\n    <Provider store={store}>\r\n        <AppContainer/>\r\n    </Provider>\r\n</HashRouter>\r\n}\r\n\r\nexport default SoapJSApp;","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SoapJSApp from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <SoapJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport s from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormsControl=({input,meta:{touched,error},children})=>{\r\n    const hasError=touched && error;\r\n    return(\r\n        <div className={s.formControl +\" \"+ (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>)\r\n}\r\n\r\nexport const Textarea = (props)=>{\r\n    const {input,meta,child, ...restProps} = props;\r\n    return<FormsControl{...props}><textarea {...input}{...restProps}/></FormsControl>\r\n}\r\nexport const Input = (props)=>{\r\n    const {input,meta,child, ...restProps} = props;\r\n    return<FormsControl{...props}><input {...input}{...restProps}/></FormsControl>\r\n}\r\n\r\nexport const createField=(placeholder,name, validators, component, props={}, text=\"\")=>(\r\n<div>\r\n    <Field placeholder={placeholder} \r\n        name={name} \r\n        validate={validators}  \r\n        component={component}\r\n        {...props}/>{text}\r\n</div>\r\n)\r\n\r\n/* \r\nexport const Textarea = ({input, meta, ...props})=>{\r\n    const hasError=meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl +\" \"+ (hasError ? s.error : \"\")}>\r\n            <textarea {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props})=>{\r\n    const hasError=meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl +\" \"+ (hasError ? s.error : \"\")}>\r\n            <input {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}  */","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3JSLG\",\"error\":\"FormsControls_error__mne_m\",\"formError\":\"FormsControls_formError__15Lwo\"};","import React from 'react';\r\nimport preloader from \"../../../images/preloader.svg\";\r\n\r\nlet Preloader = (props)=>{\r\n    return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n    if (value)return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator =(maxLength) => (value) => {\r\n    if (value.length>maxLength)return `Max Length ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__9SxPT\",\"loginBlock\":\"Header_loginBlock__2ncfA\"};","import {\r\n    profileAPI,\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [{\r\n            id: 1,\r\n            message: 'это мой первый пост',\r\n            likesCount: 20\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'это мой второй пост',\r\n            likesCount: 33\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case 'SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case 'SET_USER_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n})\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}