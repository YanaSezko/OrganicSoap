{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"oMAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAOD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAc,IACrCC,EADoC,uKAGlC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADE,kBAAC,IAAD,CAAUC,GAAK,eAHV,GACVC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCUpMC,EAPI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OAAO,wBAAIC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACrC,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCAnBC,EAJC,SAACd,GACb,OAAO,wBAAIS,UAAWC,IAAEK,SAAUf,EAAMe,U,iCCoCtCC,EAAYC,YAAiB,IAa7BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAXP,SAACnB,GAClB,OACI,0BAAMqB,SAAUrB,EAAMsB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAASX,GACpBH,KAAK,iBAAiBe,YAAY,uBAClC,4CASGC,EA9CC,SAAC7B,GAEb,IAAIP,EAAOO,EAAM8B,YAEbC,EAAiBtC,EAAMuC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAE1B,GAAIK,KAAMqB,EAAErB,KAAML,GAAI0B,EAAE1B,QAEnF4B,EAAkB3C,EAAM4C,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAE9B,GAAIO,QAASuB,EAAEvB,QAASP,GAAI8B,EAAE9B,QAEvEf,EAAM8C,eAO3B,OAAQ,oCACL,yBAAK9B,UAAWC,IAAEsB,SACb,wBAAIvB,UAAWC,IAAE8B,cACZT,GAEL,wBAAItB,UAAWC,IAAE2B,UACZD,IAGL,kBAAClB,EAAD,CAAqBG,SAdX,SAACoB,GACfzC,EAAM0C,YAAYD,EAAOF,qB,wBCFlBI,sBACXxC,aAdkB,SAACV,GACnB,MAAO,CACHqC,YAAarC,EAAMqC,gBAGF,SAACc,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAOpC3C,IAFW+C,CAGbd","file":"static/js/5.4e903888.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n  }); \r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return<Redirect to = '/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n         \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__281WP\",\"dialogsItems\":\"Dialogs_dialogsItems__1ouag\",\"active\":\"Dialogs_active__1alHM\",\"dialog\":\"Dialogs_dialog__3GlWE\",\"messages\":\"Dialogs_messages__3wGaJ\",\"message\":\"Dialogs_message__13J1F\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <li className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </li>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <li className={s.message}>{props.message}</li>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state= props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n\r\n    let messagesElement = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage=(values)=>{\r\n        props.sendMessage(values.newMessageBody);\r\n        \r\n    }\r\n\r\n    return (<>\r\n       <div className={s.dialogs}>\r\n            <ul className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </ul>\r\n            <ul className={s.messages}>\r\n                {messagesElement}\r\n            </ul>\r\n        </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst maxLength50=maxLengthCreator(50)\r\n\r\nconst AddMessageForm=(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} \r\n            validate={[required,maxLength50]}\r\n            name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            <button>Send</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect\"\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n        }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}