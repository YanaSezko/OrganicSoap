{"version":3,"sources":["images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Users/users.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","api/api.js","redux/auth-reducer.js","redux/app-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/common/FormControls/FormsControls.js","utils/validators/validators.js","components/Login/Login.jsx","components/common/Preloader/Preloader.js","redux/profile-reducer.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/redux-store.js","hoc/withSuspense.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","App.js","index.js","components/Navbar/Navbar.module.css","components/common/FormControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","images/panda1.png","components/Profile/MyPosts/MyPosts.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","nav_list","item","to","activeClassName","active","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","initialState","login","isAuth","captchaUrl","setAuthUserData","type","payload","getCaptchaUrlSuccess","getAuthUserData","dispatch","a","resultCode","id","getCaptchaUrl","url","authReducer","state","action","initialized","appReducer","Header","props","header","loginBlock","onClick","logout","HeaderContainer","this","React","Component","connect","auth","FormsControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","name","validators","component","text","Field","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","alt","src","formError","message","messages","stopSubmit","_error","Preloader","preloader","posts","likesCount","setStatus","getUserProfile","profileReducer","newPost","newPostText","photos","dialogs","dialogsReducer","body","newMessageBody","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","reducers","combineReducers","profilePage","dialogsPage","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogItem","path","dialog","Message","maxLength50","AddMessageFormRedux","Dialogs","dialogsElement","d","key","messagesElement","m","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","sendMessageCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","style","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","mainPhoto","large","userPhoto","target","files","initialValues","Post","MyPosts","memo","postsElement","p","postBlock","AddNewPostFormRedux","addPost","maxLength10","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","snapshot","file","getState","Promise","reject","withRouter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","cn","selectedPage","pageNumber","User","user","photo","small","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","page","totalCount","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","render","DialogsContainer","AppContainer","promise","all","SoapJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fc06735.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.208ba494.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__yEwOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__1w5UU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3r0xS\",\"dialogsItems\":\"Dialogs_dialogsItems__3lH0O\",\"active\":\"Dialogs_active__zZKyS\",\"dialog\":\"Dialogs_dialog___dbD8\",\"messages\":\"Dialogs_messages__1ZCKm\",\"message\":\"Dialogs_message__1swd8\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul className={s.nav_list}>\r\n                <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Главная</NavLink></li>\r\n               {/*  <li className={s.item}><NavLink to=\"/about\" activeClassName={s.active}>О Нас</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/contacts\" activeClassName={s.active}>Контакты</NavLink></li> */}\r\n                <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Чат</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Пользователи</NavLink></li>\r\n            </ul>\r\n        </nav>)\r\n}\r\n\r\nexport default Navbar;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"2b6e2e12-95e4-4959-af89-fb3a85f352e8\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(/*'https://cors-anywhere.herokuapp.com/' + */`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n\r\n        return instance.post(/*'https://cors-anywhere.herokuapp.com/' + */`follow/${userId}` )\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(/*'https://cors-anywhere.herokuapp.com/' + */`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(/*'https://cors-anywhere.herokuapp.com/' + */ `profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(/*'https://cors-anywhere.herokuapp.com/' + */ `profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(/*'https://cors-anywhere.herokuapp.com/' + */ `profile/status`,{status:status});\r\n    },\r\n    savePhoto(photoFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n\r\n        })\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(/*'https://cors-anywhere.herokuapp.com/' + */ `profile`, profile);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\nreturn  instance.get(/*'https://cors-anywhere.herokuapp.com/' + */`auth/me`);\r\n    },\r\n    login(email,password,rememberMe=false, captcha=null){\r\nreturn   instance.post(/*'https://cors-anywhere.herokuapp.com/' + */`auth/login`,{email,password,rememberMe,captcha});      \r\n    },\r\n    logout(){\r\n        return   instance.delete(/*'https://cors-anywhere.herokuapp.com/' + */`auth/login`);     \r\n            }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return  instance.get(`security/get-captcha-url`);\r\n    }\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'organic-soap/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'organic-soap/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n             }\r\n       \r\n             default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, \r\n    payload: {userId, email, login,isAuth}});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, \r\n    payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = ()=> async(dispatch)=>{\r\nlet response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login,true));\r\n        }\r\n}\r\n\r\nexport const login = (email,password,rememberMe,captcha)=> async(dispatch)=>{\r\n    let response = await authAPI.login(email,password,rememberMe, captcha);\r\n        if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10 ){\r\n                dispatch(getCaptchaUrl());\r\n            }  \r\n          let message = response.data.messages.length > 0 ? response.data.messages[0]:\"Some error\"; \r\n    dispatch(stopSubmit(\"login\", {_error: message}));\r\n         }\r\n}\r\n\r\nexport const getCaptchaUrl = ()=> async(dispatch)=>{\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n    }\r\n\r\nexport const logout = ()=>async(dispatch)=>{\r\n    let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null,false));\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n             return {\r\n                ...state,\r\n                initialized: true\r\n             }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = ()=>(dispatch)=>{\r\n let promise = dispatch(getAuthUserData());\r\n//dispatch(somethingelse());\r\n//dispatch(somethingelse());\r\n Promise.all([promise])\r\n .then(()=>{\r\n    dispatch(initializedSuccess());\r\n  });\r\n \r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header =(props)=>{\r\n    return <header className={s.header}>\r\n        <h2>Organic Soap by YS</h2>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div>{props.login} -<button onClick={props.logout}>Log out</button></div>: <NavLink to={'/login'}>login</NavLink> }\r\n        </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport s from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormsControl=({input,meta:{touched,error},children})=>{\r\n    const hasError=touched && error;\r\n    return(\r\n        <div className={s.formControl +\" \"+ (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>)\r\n}\r\n\r\nexport const Textarea = (props)=>{\r\n    const {input,meta,child, ...restProps} = props;\r\n    return<FormsControl{...props}><textarea {...input}{...restProps}/></FormsControl>\r\n}\r\nexport const Input = (props)=>{\r\n    const {input,meta,child, ...restProps} = props;\r\n    return<FormsControl{...props}><input {...input}{...restProps}/></FormsControl>\r\n}\r\n\r\nexport const createField = ( placeholder, name, validators, component, props={}, text=\"\"  ) => (\r\n<div>\r\n    <Field placeholder={placeholder} \r\n        name={name} \r\n        validate={validators}  \r\n        component={component}\r\n        {...props}/>{text}\r\n</div>\r\n)\r\n\r\n/* \r\nexport const Textarea = ({input, meta, ...props})=>{\r\n    const hasError=meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl +\" \"+ (hasError ? s.error : \"\")}>\r\n            <textarea {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props})=>{\r\n    const hasError=meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl +\" \"+ (hasError ? s.error : \"\")}>\r\n            <input {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}  */","export const required = value => {\r\n    if (value)return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator =(maxLength) => (value) => {\r\n    if (value.length>maxLength)return `Max Length ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, createField } from '../common/FormControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from \"./../common/FormControls/FormsControls.module.css\" \r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl})=>{\r\n    return (\r\n        <form  onSubmit={handleSubmit}>\r\n        {createField(\"Email\",\"email\",[required], Input)}\r\n        {createField(\"Password\",\"password\",[required], Input,{type:\"password\"})}      \r\n        {createField(null,\"rememberMe\",[], Input,{type:\"checkbox\"}, \"remember me\")}     \r\n        {captchaUrl && <img alt='captca' src={captchaUrl} />}\r\n        {captchaUrl && createField( \"Symbols from image\",\"captcha\",[required], Input, {})}     \r\n\r\n        {error && <div className={s.formError}>{error}</div>}\r\n             <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props)=>{\r\nconst onSubmit = (formData)=>{\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n}\r\n \r\nif (props.isAuth){\r\n    return <Redirect to={\"/profile\"}/>\r\n}\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n    export default connect(mapStateToProps, {login})(Login);\r\n\r\n\r\n\r\n\r\n   ","import React from 'react';\r\nimport preloader from \"../../../images/preloader.svg\";\r\n\r\nlet Preloader = (props)=>{\r\n    return <img alt='preloader' src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","import {\r\n    profileAPI,\r\n    usersAPI\r\n} from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    posts: [{\r\n            id: 1,\r\n            message: 'это мой первый пост',\r\n            likesCount: 20\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'это мой второй пост',\r\n            likesCount: 33\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case 'SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case 'SET_USER_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case 'SAVE_PHOTO_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n})\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos\r\n})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n       dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n       dispatch(getUserProfile(userId));\r\n    } else{\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n         return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer;","/* const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'; */\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Yana'},\r\n        {id: 2, name: 'Olya'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Vasya'},\r\n        {id: 5, name: 'Sasha'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n           return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray=(items,itemId, objPropName, newObjProps)=>{\r\n\r\nreturn items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})\r\n}\r\n","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n//import actions from \"redux-form/lib/actions\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n            case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    users:updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                }\r\n                case SET_USERS: {\r\n                    return {\r\n                        ...state,\r\n                        users: action.users\r\n                    }\r\n                }\r\n                case SET_CURRENT_PAGE: {\r\n                    return {...state, currentPage: action.currentPage}\r\n                }\r\n                case SET_TOTAL_USERS_COUNT: {\r\n                    return {...state, totalUsersCount: action.count }\r\n                }\r\n                case TOGGLE_IS_FETCHING: {\r\n                    return {...state, isFetching: action.isFetching }\r\n                }\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n                    return {\r\n                        ...state,\r\n                        followingInProgress: action.isFetching \r\n                        ? [...state.followingInProgress, action.userId] \r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n                    }\r\n                }\r\n                default:\r\n                    return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n})\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n})\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n        \r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {\r\n    applyMiddleware,\r\n    combineReducers,\r\n    createStore,\r\n    compose\r\n} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {\r\n    reducer as formReducer\r\n} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) =>{\r\n    return (props) => {\r\n        return  <React.Suspense fallback={<Preloader/>}>\r\n                    <Component {...props} />\r\n                </React.Suspense> \r\n                };\r\n            }","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <li className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </li>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <li className={s.message}>{props.message}</li>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state= props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n\r\n    let messagesElement = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    let addNewMessage=(values)=>{\r\n        props.sendMessage(values.newMessageBody);\r\n        \r\n    }\r\n\r\n    return (<>\r\n       <div className={s.dialogs}>\r\n            <ul className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </ul>\r\n            <ul className={s.messages}>\r\n                {messagesElement}\r\n            </ul>\r\n        </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst maxLength50=maxLengthCreator(50)\r\n\r\nconst AddMessageForm=(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} \r\n            validate={[required,maxLength50]}\r\n            name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            <button>Send</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n  }); \r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return<Redirect to = '/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n         \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","//import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect\"\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n        }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect( () => {\r\n setStatus(props.status);\r\n}, [props.status]);\r\n\r\nconst activateEditMode=()=>{\r\n    setEditMode(true);\r\n}\r\n\r\nconst deactivateEditMode=()=>{\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\nconst onStatusChange=(e)=>{\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n             <div>\r\n                   <b>Status</b>:<span onDoubleClick={activateEditMode}>{ props.status || \"----\" }</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                    value = {status} />\r\n                </div>\r\n            }\r\n        </div>\r\n        )       \r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport { createField, Input, Textarea } from \"../../common/FormControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"./../../common/FormControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm =({handleSubmit, profile, error})=>{\r\n    return  <form onSubmit={handleSubmit}>\r\n<div><button>save</button></div>\r\n\r\n{error && <div className={style.formError}>{error}</div>}\r\n\r\n <div>\r\n     <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n</div>\r\n<div>\r\n     <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input,{type:\"checkbox\"} )}\r\n</div>\r\n<div>\r\n    <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea )}\r\n</div>\r\n<div>\r\n     <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea )}\r\n</div>\r\n<div>\r\n     <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>{\r\n         return <div key={key} className ={s.contact}>\r\n              <b>{key}</b>:{createField(key, \"contacts.\"+key, [], Input)}\r\n         </div>\r\n     })}\r\n</div>\r\n</form>\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n//import banner from './../../../images/banner.jpg';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from \"./../../../images/panda1.png\";\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus,isOwner,savePhoto, saveProfile }) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    \r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) =>{\r\n    if (e.target.files.length){\r\n        savePhoto(e.target.files[0]);\r\n      }\r\n    } \r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            ()=>{\r\n            setEditMode(false);\r\n            }\r\n        );\r\n        \r\n        return true;\r\n    }\r\n     \r\n\r\n    return (\r\n \r\n    <div>\r\n       {/*  <div className={s.banner}>\r\n            <img width='100%' src={banner} alt={\"banner\"}/>\r\n        </div>\r\n        <h1>100% Natural Soap</h1> */}\r\n        \r\n        <div>\r\n            <img alt='avatar' className={s.mainPhoto} src={profile.photos.large || userPhoto}/>\r\n            {isOwner && <input type= {\"file\"} onChange={onMainPhotoSelected}/>}\r\n            \r\n            {editMode \r\n            ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \r\n            : <ProfileData goToEditMode={()=>{setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n            \r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nconst ProfileData =({profile, isOwner, goToEditMode})=>{\r\n    return  <div>\r\n       {isOwner && <div><button onClick={goToEditMode}>edit</button></div>} \r\n    <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n   </div>\r\n   <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n   </div>\r\n   {profile.lookingForAJob &&\r\n    <div>\r\n       <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n    </div>\r\n   }\r\n   <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n   </div>\r\n   <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>{\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n   </div>\r\n</div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue})=>{\r\nreturn <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post =(props)=>{\r\n    return <li className={s.item}><a>{props.message}</a></li>\r\n }\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\n//import ProfileStatusWithHooks from '../ProfileInfo/ProfileStatusWithHooks';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = [...props.posts].map(p => <Post key={p.id} message={p.message} id={p.id} likesCount={p.likesCount}/>);\r\n\r\n   /*  let newPostEl = React.createRef(); */\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n   \r\n\r\n    return <section className={s.postBlock}>\r\n        <div>Добавить новый пост</div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\r\n        <ul className={s.posts}>\r\n            {postsElement}\r\n        </ul>\r\n    </section>\r\n});\r\n\r\nconst maxLength10=maxLengthCreator(10);\r\n\r\nconst AddNewPostForm=(props)=>{\r\n    return(\r\n        <>\r\n        <form onSubmit={props.handleSubmit} className={s.addPost}>\r\n            <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder={\"Post message\"}></Field>\r\n            <button>Add new post</button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n    form:\"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","//import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n       }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n//import s from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div>\r\n       {/*  <iframe  className={s.vid} width=\"727\" height=\"409\" src=\"https://www.youtube.com/embed/HJeJ_1ASQYI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n        <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner}  profile={props.profile}  status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, updateStatus, getStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\"\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            < Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount =  Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1)*portionSize+1;\r\n    let rightPortionPageNumber = portionNumber*portionSize;\r\n    return(\r\n        <div className = {styles.paginator}>\r\n            {portionNumber > 1 && \r\n            <button onClick={()=>{setPortionNumber(portionNumber-1)}}>PREV</button>}\r\n            {pages\r\n            .filter(p=>p>=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span className = {cn({\r\n                    [styles.selectedPage]:currentPage === p\r\n                }, styles.pageNumber)}\r\n                key={p}\r\n                onClick={(e) => {onPageChanged(p);\r\n                 }}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber &&\r\n              <button onClick = {()=>{setPortionNumber(portionNumber+1)}}>NEXT</button>}\r\n        </div>\r\n     )\r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../images/panda1.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n//import Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}) => {\r\n  \r\nreturn (\r\n      <div>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img className={styles.photo} src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             alt=\"avatar\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}  \r\n                            onClick={() => {unfollow(user.id)}}>UnFollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {follow(user.id)}}>Follow</button>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                <div>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>)    \r\n }\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, onPageChanged,users, pageSize, ...props}) => {\r\nreturn <>\r\n    <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n    <div>\r\n    { users.map(u => <User user={u} \r\n                        followingInProgress={props.followingInProgress} \r\n                        key={u.id}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow} />)\r\n                        }\r\n    </div>                    \r\n    </>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state)=>{\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users)=>{\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state)=>{\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state)=>{\r\n    return  state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state)=>{\r\n    return  state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state)=>{\r\n    return  state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state)=>{\r\n    return  state.usersPage.followingInProgress;\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow, \r\n    setCurrentPage,\r\n    toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n//import { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getUsers, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage,pageSize}=this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize}=this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChanged={this.onPageChanged}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                  \r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n\r\n    }\r\n} \r\n\r\n\r\nexport default compose(\r\n  //withAuthRedirect, \r\n    connect(mapStateToProps,{\r\n    follow,unfollow,\r\n    setCurrentPage, \r\n    toggleFollowingProgress,\r\n    getUsers: requestUsers})\r\n)(UsersContainer)   ","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport { BrowserRouter, Route, withRouter, Switch, Redirect } from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from \"react-redux\";\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n/* const DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\n */\r\nclass App extends Component {\r\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n        alert(\"Some error occured\");\r\n    }\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className=\"app-wrapper-content\">\r\n                    <Switch>\r\n                        <Route exact path='/'\r\n                            render={() => <Redirect to={\"/profile\"} />} />\r\n                        <Route exact path='/OrganicSoap'\r\n                            render={() => <Redirect to={\"/profile\"} />} />\r\n                        <Route path='/dialogs'\r\n                            render={withSuspense(DialogsContainer)} />\r\n                        <Route path='/profile/:userId?'\r\n                            render={withSuspense(ProfileContainer)} />\r\n                        <Route path='/users'\r\n                            render={withSuspense(UsersContainer)} />\r\n                        <Route path='/login' render={() => <Login />} />\r\n                        <Route path='*' render={() => <div>404 NOT FOUND</div>} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SoapJSApp = (props) => {\r\n    return <BrowserRouter /* basename = {process.env.PUBLIC_URL} */>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SoapJSApp;","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SoapJSApp from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <SoapJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2PXtA\",\"item\":\"Navbar_item__MG2vX\",\"active\":\"Navbar_active__cKThg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3duLD\",\"error\":\"FormsControls_error__2NKyP\",\"formError\":\"FormsControls_formError__20L7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"ProfileInfo_banner__2h-Bf\",\"mainPhoto\":\"ProfileInfo_mainPhoto__YMK7o\",\"contact\":\"ProfileInfo_contact__26G2r\"};","module.exports = __webpack_public_path__ + \"static/media/panda1.f706e3e6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__2AK_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__8IW4S\",\"paginator\":\"Paginator_paginator__1_4F5\",\"pageNumber\":\"Paginator_pageNumber__2jvKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__bc7yc\",\"loginBlock\":\"Header_loginBlock__1hm1g\"};"],"sourceRoot":""}